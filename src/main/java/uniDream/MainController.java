package uniDream;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.web.server.ResponseStatusException;
import uniDream.DVO.ProgramVO;
import uniDream.DVO.UniversityVO;
import uniDream.entities.Program;
import uniDream.entities.Tag;
import uniDream.entities.University;
import uniDream.services.UniversityService;
import uniDream.services.TagService;
import uniDream.services.UniversityServiceImpl;
import uniDream.services.TagServiceImpl;

import java.util.List;
import java.util.Optional;

@RestController // This means that this class is a Controller
@RequestMapping(path = "/v0") // This means URL's start with /demo (after Application path)
public class MainController {

    @Autowired
    UniversityService universityService;

    @Autowired
    TagService tagService;

//    @Autowired(required = true)
//    @Qualifier(value = "universityService")
//    public void setEmployerService(UniversityService universityService) {
//        this.universityService = universityService;
//    }
//
//    @Autowired(required = true)
//    @Qualifier(value = "tagService")
//    public void setProjectService(TagService tagService) {
//        this.tagService = tagService;
//    }

//    @Autowired // This means to get the bean called userRepository
//    // Which is auto-generated by Spring, we will use it to handle the data
//    private UniversityRepository universityRepository;
//
//    @Autowired // This means to get the bean called userRepository
//    // Which is auto-generated by Spring, we will use it to handle the data
//    private TagRepository tagRepository;

    @GetMapping(path = "/universities")
    public @ResponseBody Iterable<UniversityVO> getUniversities() {
        // This returns a JSON or XML with the universities
        return universityService.getAllProjects();
    }

    @GetMapping(path = "/university")
    public @ResponseBody Iterable<ProgramVO> getAllPrograms(@RequestParam String id) {
        // This returns a JSON or XML with programs of the university
        return universityService.getPrograms(Integer.valueOf(id));
    }

    @GetMapping(path = "/programs")
    public @ResponseBody Iterable<Program> getProgramsByTags(@RequestBody List<String> tags) {
        // This returns a JSON or XML with the users
        return tagService.findProgramsWithSuchTags(tags);
    }

    @GetMapping(path = "/tags")
    public @ResponseBody Iterable<Tag> getTags() {
        // This returns a JSON or XML with the all tags
        return tagService.getAllTags();
    }
}

